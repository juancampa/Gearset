<Window x:Class="Gearset.UserInterface.Wpf.Widget.WidgetWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        WindowStyle="None"
        Background="Transparent"
        AllowsTransparency="True"
        ResizeMode="NoResize"
        ShowInTaskbar="False" mc:Ignorable="d" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        SizeToContent="WidthAndHeight"
        FontSize="12">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Common\CommonStyle.xaml"/>
                <ResourceDictionary>
                    <SolidColorBrush x:Key="backgroundBrushSolid" Color="#00404040"/>
                    <BitmapImage x:Key="iconImage" UriSource="icon.png"/>
                    <BitmapImage x:Key="iconImageOver" UriSource="icon_over.png"/>
                    
                    <Style x:Key="toggleButton" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="IsThreeState" Value="False" />
                        <Setter Property ="Padding" Value="7 4 7 4" />
                        <Setter Property="Background" Value="{StaticResource titlebarBrush}"></Setter>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="{DynamicResource titlebarBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource highlightText1}"/>
                                <Setter Property="Content" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <!--<Setter Property="Background" Value="{DynamicResource normal1}"/>-->
                                <Setter Property="Foreground" Value="{DynamicResource normalText1}"/>
                                <Setter Property="Content" Value="False"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="{DynamicResource highlight1}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{DynamicResource highlight1}" />
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Window.ContextMenu>
        <ContextMenu Name="ContextMenu" MenuItem.Click="ContextMenu_Click">
            <MenuItem Header="Support/Feature Request"/>
            <Separator/>
            <MenuItem Header="About"/>
        </ContextMenu>
    </Window.ContextMenu>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        
        <Image Grid.Row="0" Grid.Column="0" Height="20" Margin="0,0,5,0">
            <Image.Style>
                <Style TargetType="Image">
                    <Setter Property="Source" Value="{StaticResource iconImage}"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Source" Value="{StaticResource iconImageOver}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
        <StackPanel Grid.Column="1" Orientation="Horizontal">
            <ToggleButton Style="{StaticResource toggleButton}" IsChecked="{Binding Enabled}" ToolTip="Enables/Disables Gearset Completely.">Master Switch</ToggleButton>
            <ToggleButton Style="{StaticResource toggleButton}" IsChecked="{Binding InspectorConfig.Visible}">Inspector</ToggleButton>
            <ToggleButton Style="{StaticResource toggleButton}" IsChecked="{Binding FinderConfig.Visible}">Finder</ToggleButton>
            <ToggleButton Style="{StaticResource toggleButton}" IsChecked="{Binding LoggerConfig.Visible}">Logger</ToggleButton>
            <ToggleButton Style="{StaticResource toggleButton}" IsChecked="{Binding BenderConfig.Visible}">Bender</ToggleButton>
            <ToggleButton Style="{StaticResource toggleButton}" IsChecked="{Binding ProfilerConfig.Visible}">Profiler</ToggleButton>
            <ListView VerticalAlignment="Top" Height="20" Name="buttonList" Background="Transparent" Margin="0" Padding="0">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Button Content="{Binding}" VerticalAlignment="Stretch" Margin="2,0,2,0" MinWidth="0" Click="Button_Click"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>

                <ListView.Template>
                    <ControlTemplate>
                        <ItemsPresenter/>
                    </ControlTemplate>
                </ListView.Template>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" Width="Auto"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>
        </StackPanel>
    </Grid>
</Window>
