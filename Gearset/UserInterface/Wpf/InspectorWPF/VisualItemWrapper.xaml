<UserControl x:Class="Gearset.Components.InspectorWPF.VisualItemWrapper"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Gearset.Components.InspectorWPF"
    Height="Auto"
    Width="Auto"
    AllowDrop="True">
    <UserControl.Resources>
        <!-- Style for BoolButtons -->
        <Style x:Key="wrapperButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="IsThreeState" Value="false"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="Height" Value="17"/>
            <Setter Property="Padding" Value="0 -6 0 0"/>
            <Setter Property="Margin" Value="1 0 0 0"/>
            <Setter Property="BorderThickness" Value="0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Rectangle RadiusX="2" RadiusY="2" Fill="{TemplateBinding Background}">
                            </Rectangle>
                            <ContentPresenter
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      Margin="0" />

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#aaa"/>
                    <Setter Property="Foreground" Value="#222"/>
                    <Setter Property="Content" Value="True"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#aaa"/>
                    <Setter Property="Content" Value="False"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <Style  x:Key="grabableTextBoxStyle" TargetType="TextBlock">
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                                  Value="True">
                    <Setter Property="Foreground"
                                   Value="#eee" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Name="Grid1">
        <Grid.ColumnDefinitions>
            <!--0 Icons -->
            <ColumnDefinition MinWidth ="16" Width="Auto"/>
            <!--1 Node name -->
            <ColumnDefinition/>
            <!--2 VisualItem -->
            <ColumnDefinition Width="Auto"/>
            <!--3 Buttons -->
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <!--<Rectangle Grid.Column="0" Fill="Red"/>
        <Rectangle Grid.Column="1" Fill="Green"/>
        <Rectangle Grid.Column="2" Fill="Blue"/>
        <Rectangle Grid.Column="3" Fill="White"/>-->
        <Image Width="13" Grid.Column="0" Visibility="{Binding Path=ShowCantWriteIcon, Converter={StaticResource BooleanToVisibilityConverter}}"
                   ToolTip="This field or property is not writable. Children might be.">
            <Image.Source>
                <BitmapImage DecodePixelWidth="13" UriSource="../../../read-only-icon.png" />
            </Image.Source>
        </Image>
        <!--<Rectangle Name="transparentRectangle" Fill="Transparent" Grid.Column="1">
            <Rectangle.Style>
                <Style TargetType="Rectangle">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property=""
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Rectangle.Style>
        </Rectangle>-->
        <Grid Name="labelsPanel" Grid.Column="1" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            
            <!--Node Name-->
            <TextBlock Name="TextBlock1" HorizontalAlignment ="Left" Grid.Column="0">
                <TextBlock.Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource grabableTextBoxStyle}">
                        <Setter Property="FontWeight" Value="Normal"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding UserModified}" Value="True">
                                <Setter Property="FontWeight" Value="Bold"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPrivate}" Value="True">
                                <Setter Property="Foreground" Value="#777"/> <!-- TODO: Should be subtle1 -->
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <!--Type Name-->
            <TextBlock Name="TextBlock2" HorizontalAlignment="Left" Grid.Column="1" MaxWidth="200" Width="Auto" MinWidth="20" TextTrimming="CharacterEllipsis" Margin="10 0 0 0" Foreground="{DynamicResource subtle1}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value=""/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Parent}" Value="{x:Null}">
                                <Setter Property="Text" Value="{Binding Type.Name}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <!--<TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value=""/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsRoot}" Value="True"/>
                                    <Condition Binding="{Binding Type.IsValueType}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Text" Value="(copy)"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>-->
        </Grid>
        <StackPanel Orientation="Horizontal" Grid.Column="3" >
            <ToggleButton Style="{StaticResource wrapperButtonStyle}" IsChecked="{Binding Updating}" ToolTip="Show the Live value every frame" IsEnabled="True">L</ToggleButton>
            <ToggleButton Style="{StaticResource wrapperButtonStyle}" IsChecked="{Binding Force}" ToolTip="Inject this value to the field/property every frame">I</ToggleButton>
            <!--<ToggleButton Style="{StaticResource wrapperButtonStyle}" IsChecked="{Binding Hidden}" ToolTip="Hidden (not implemented)">H</ToggleButton>-->
        </StackPanel>
    </Grid>
</UserControl>
